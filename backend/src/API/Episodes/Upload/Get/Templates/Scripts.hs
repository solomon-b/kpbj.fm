module API.Episodes.Upload.Get.Templates.Scripts
  ( renderTrackManagementScript,
  )
where

--------------------------------------------------------------------------------

import Data.Text qualified as Text
import Lucid qualified

--------------------------------------------------------------------------------

-- | Render JavaScript for track management
renderTrackManagementScript :: Lucid.Html ()
renderTrackManagementScript = do
  Lucid.script_ $
    Text.unlines
      [ "let trackCount = 0;",
        "let tracks = [];",
        "",
        "function addTrack() {",
        "  trackCount++;",
        "  const trackDiv = document.createElement('div');",
        "  trackDiv.className = 'border border-gray-300 p-4 bg-gray-50 mb-4';",
        "  trackDiv.innerHTML = `",
        "    <div class='grid grid-cols-1 md:grid-cols-3 gap-4'>",
        "      <div>",
        "        <label class='block font-bold text-sm mb-1'>Track Title</label>",
        "        <input type='text' class='w-full p-2 border border-gray-400 text-sm font-mono track-title' placeholder='Track title'>",
        "      </div>",
        "      <div>",
        "        <label class='block font-bold text-sm mb-1'>Artist</label>",
        "        <input type='text' class='w-full p-2 border border-gray-400 text-sm font-mono track-artist' placeholder='Artist name'>",
        "      </div>",
        "      <div>",
        "        <label class='block font-bold text-sm mb-1'>Album/Year</label>",
        "        <input type='text' class='w-full p-2 border border-gray-400 text-sm font-mono track-album' placeholder='Album (Year)'>",
        "      </div>",
        "    </div>",
        "    <div class='grid grid-cols-2 md:grid-cols-4 gap-4 mt-4'>",
        "      <div>",
        "        <label class='block font-bold text-sm mb-1'>Duration</label>",
        "        <input type='text' class='w-full p-2 border border-gray-400 text-sm font-mono track-duration' placeholder='4:23'>",
        "      </div>",
        "      <div>",
        "        <label class='block font-bold text-sm mb-1'>Label</label>",
        "        <input type='text' class='w-full p-2 border border-gray-400 text-sm font-mono track-label' placeholder='Record label'>",
        "      </div>",
        "      <div class='flex items-end'>",
        "        <label class='flex items-center text-sm'>",
        "          <input type='checkbox' class='mr-2 track-exclusive'> Exclusive Premiere",
        "        </label>",
        "      </div>",
        "      <div class='flex items-end justify-end'>",
        "        <button type='button' class='bg-red-600 text-white px-3 py-1 text-xs font-bold hover:bg-red-700' onclick='removeTrack(this)'>",
        "          REMOVE",
        "        </button>",
        "      </div>",
        "    </div>",
        "  `;",
        "  ",
        "  const container = document.getElementById('tracklist-container');",
        "  const addButton = container.querySelector('.border-dashed');",
        "  container.insertBefore(trackDiv, addButton);",
        "  updateTracksJson();",
        "}",
        "",
        "function removeTrack(button) {",
        "  button.closest('.border').remove();",
        "  trackCount--;",
        "  updateTracksJson();",
        "}",
        "",
        "function updateTracksJson() {",
        "  const trackDivs = document.querySelectorAll('#tracklist-container .border:not(.border-dashed)');",
        "  tracks = [];",
        "  ",
        "  trackDivs.forEach((div, index) => {",
        "    const track = {",
        "      tiTitle: div.querySelector('.track-title')?.value || '',",
        "      tiArtist: div.querySelector('.track-artist')?.value || '',",
        "      tiAlbum: div.querySelector('.track-album')?.value || null,",
        "      tiYear: null, // Could parse from album field",
        "      tiDuration: div.querySelector('.track-duration')?.value || null,",
        "      tiLabel: div.querySelector('.track-label')?.value || null,",
        "      tiIsExclusive: div.querySelector('.track-exclusive')?.checked || false",
        "    };",
        "    tracks.push(track);",
        "  });",
        "  ",
        "  document.getElementById('tracks-json').value = JSON.stringify(tracks);",
        "}",
        "",
        "// Add event listener for the add track button",
        "document.addEventListener('DOMContentLoaded', function() {",
        "  document.getElementById('add-track-btn').addEventListener('click', addTrack);",
        "  ",
        "  // Update tracks JSON whenever form inputs change",
        "  document.addEventListener('input', function(e) {",
        "    if (e.target.closest('#tracklist-container')) {",
        "      updateTracksJson();",
        "    }",
        "  });",
        "  ",
        "  document.addEventListener('change', function(e) {",
        "    if (e.target.closest('#tracklist-container')) {",
        "      updateTracksJson();",
        "    }",
        "  });",
        "});"
      ]
